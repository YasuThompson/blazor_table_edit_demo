// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTableEdit.Data;

#nullable disable

namespace MovieTableEdit.Migrations
{
    [DbContext(typeof(MovieTableEditContext))]
    partial class MovieTableEditContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MovieTableEdit.Models.MockGenreDim", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("MockGenreDim", (string)null);

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Genre = "SciFi"
                        },
                        new
                        {
                            GenreId = 2,
                            Genre = "Action"
                        });
                });

            modelBuilder.Entity("MovieTableEdit.Models.MockMovieDim", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.ToTable("MockMovieDim", (string)null);

                    b.HasData(
                        new
                        {
                            MovieId = 1111,
                            GenreId = 1,
                            Title = "Mad Max"
                        },
                        new
                        {
                            MovieId = 1112,
                            GenreId = 1,
                            Title = "The Road Warrior"
                        },
                        new
                        {
                            MovieId = 1113,
                            GenreId = 2,
                            Title = "Mad Max: Beyond Thunderdome"
                        },
                        new
                        {
                            MovieId = 1114,
                            GenreId = 1,
                            Title = "Mad Max: Fury Road"
                        },
                        new
                        {
                            MovieId = 1115,
                            GenreId = 1,
                            Title = "Furiosa: A Mad Max Saga"
                        });
                });

            modelBuilder.Entity("MovieTableEdit.Models.MockMovieFact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("MockMovieFact", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(1979, 4, 12),
                            MovieId = 1111,
                            Price = 2.51m
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(1981, 12, 24),
                            MovieId = 1112,
                            Price = 2.78m
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(1985, 7, 10),
                            MovieId = 1113,
                            Price = 3.55m
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2015, 5, 15),
                            MovieId = 1114,
                            Price = 8.43m
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2024, 5, 24),
                            MovieId = 1115,
                            Price = 13.49m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
