// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTableEdit.Data;

#nullable disable

namespace MovieTableEdit.Migrations
{
    [DbContext(typeof(MovieTableEditContext))]
    [Migration("20240908202614_DataTypeAdjustment")]
    partial class DataTypeAdjustment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MovieTableEdit.Models.MockGenreDim", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("MockGenreDim", (string)null);

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Genre = "SciFi"
                        },
                        new
                        {
                            GenreId = 2,
                            Genre = "Action"
                        },
                        new
                        {
                            GenreId = 3,
                            Genre = "Eseteric"
                        },
                        new
                        {
                            GenreId = 4,
                            Genre = "Drama"
                        },
                        new
                        {
                            GenreId = 5,
                            Genre = "Fantasy"
                        },
                        new
                        {
                            GenreId = 6,
                            Genre = "Musical"
                        },
                        new
                        {
                            GenreId = 7,
                            Genre = "Comedy"
                        });
                });

            modelBuilder.Entity("MovieTableEdit.Models.MockMovieDim", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleDE")
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleES")
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleFR")
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleIT")
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleJP")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.ToTable("MockMovieDim", (string)null);

                    b.HasData(
                        new
                        {
                            MovieId = 1111,
                            GenreId = 1,
                            Title = "Mad Max",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 1112,
                            GenreId = 1,
                            Title = "The Road Warrior",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 1113,
                            GenreId = 2,
                            Title = "Mad Max: Beyond Thunderdome",
                            TitleDE = "Mad Max: Jeneseits der Donnerkuppel",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 1114,
                            GenreId = 1,
                            Title = "Mad Max: Fury Road",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 1115,
                            GenreId = 1,
                            Title = "Furiosa: A Mad Max Saga",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "Furiosa: Une saga Mad Max",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 2222,
                            GenreId = 3,
                            Title = "The Marriage of Maria Braun",
                            TitleDE = "Die Ehe der Maria Braun",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 2223,
                            GenreId = 3,
                            Title = "Aguirre, the Wrath of God",
                            TitleDE = "Aguirre, der Zorn Gottes",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 2224,
                            GenreId = 4,
                            Title = "Head-On",
                            TitleDE = "Gegen die Wand",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 3333,
                            GenreId = 4,
                            Title = "Children of Paradise",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "Les Enfants du Paradis",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 3334,
                            GenreId = 4,
                            Title = "The Wages of Fear",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "Le Salaire de la peur",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 4444,
                            GenreId = 4,
                            Title = "Talk to Her",
                            TitleDE = "",
                            TitleES = "Hable Con Ella",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 4445,
                            GenreId = 3,
                            Title = "The Spirit of the Beehive",
                            TitleDE = "",
                            TitleES = "El espíritu de la colmena",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 4446,
                            GenreId = 5,
                            Title = "Pan's Labyrinth",
                            TitleDE = "",
                            TitleES = "El Laberinto Del Fauno",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 5555,
                            GenreId = 6,
                            Title = "The Red Shoes",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 5556,
                            GenreId = 7,
                            Title = "Hot Fuzz",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 6666,
                            GenreId = 4,
                            Title = "Nights of Cabiria",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "Le notti di Cabiria",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 6667,
                            GenreId = 3,
                            Title = "The Conformist",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "Il conformista",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 6668,
                            GenreId = 4,
                            Title = "Gomorrah",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "Gomorra",
                            TitleJP = ""
                        },
                        new
                        {
                            MovieId = 7777,
                            GenreId = 2,
                            Title = "Seven Samurai",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = "七人の侍"
                        },
                        new
                        {
                            MovieId = 7778,
                            GenreId = 4,
                            Title = "Sansho the Bailiff ",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = "山椒大夫"
                        },
                        new
                        {
                            MovieId = 7779,
                            GenreId = 3,
                            Title = "Woman in the Dunes\r\n",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = "砂の女"
                        },
                        new
                        {
                            MovieId = 7780,
                            GenreId = 4,
                            Title = "Harakiri",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = "切腹"
                        },
                        new
                        {
                            MovieId = 7781,
                            GenreId = 4,
                            Title = "Merry Christmas, Mr. Lawrence ",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = "戦場のメリークリスマス"
                        },
                        new
                        {
                            MovieId = 7782,
                            GenreId = 4,
                            Title = "In This Corner of the World",
                            TitleDE = "",
                            TitleES = "",
                            TitleFR = "",
                            TitleIT = "",
                            TitleJP = "この世界の片隅に"
                        });
                });

            modelBuilder.Entity("MovieTableEdit.Models.MockMovieFact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("MockMovieFact", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(1979, 4, 12),
                            MovieId = 1111,
                            Price = 2.51m
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(1981, 12, 24),
                            MovieId = 1112,
                            Price = 2.78m
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(1985, 7, 10),
                            MovieId = 1113,
                            Price = 3.55m
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2015, 5, 15),
                            MovieId = 1114,
                            Price = 8.43m
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2024, 5, 24),
                            MovieId = 1115,
                            Price = 13.49m
                        });
                });

            modelBuilder.Entity("MovieTableEdit.Models.MockMovieFactDE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RatingDE")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MockMovieFactDE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1111,
                            Price = 2.51m,
                            RatingDE = "German-G",
                            Timestamp = new DateOnly(2023, 4, 12)
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 1112,
                            Price = 2.78m,
                            RatingDE = "German-G",
                            Timestamp = new DateOnly(2023, 12, 24)
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 1113,
                            Price = 3.55m,
                            RatingDE = "German-G",
                            Timestamp = new DateOnly(2023, 7, 10)
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 1114,
                            Price = 8.43m,
                            RatingDE = "German-G",
                            Timestamp = new DateOnly(2023, 5, 15)
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 1115,
                            Price = 13.49m,
                            RatingDE = "German-G",
                            Timestamp = new DateOnly(2023, 5, 24)
                        });
                });

            modelBuilder.Entity("MovieTableEdit.Models.MockMovieFactFR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RatingFR")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MockMovieFactFR", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1111,
                            Price = 2.51m,
                            RatingFR = "French-G",
                            Timestamp = new DateOnly(2023, 4, 12)
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 1112,
                            Price = 2.78m,
                            RatingFR = "French-G",
                            Timestamp = new DateOnly(2023, 12, 24)
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 1113,
                            Price = 3.55m,
                            RatingFR = "French-G",
                            Timestamp = new DateOnly(2023, 7, 10)
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 1114,
                            Price = 8.43m,
                            RatingFR = "French-G",
                            Timestamp = new DateOnly(2023, 5, 15)
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 1115,
                            Price = 13.49m,
                            RatingFR = "French-G",
                            Timestamp = new DateOnly(2023, 5, 24)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
