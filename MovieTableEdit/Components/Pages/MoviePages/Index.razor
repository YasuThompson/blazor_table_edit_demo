@page "/movies"
@using Microsoft.EntityFrameworkCore
@using Radzen
@using Radzen.Blazor

@using MovieTableEdit.Models
@using MovieTableEdit.Data
@inject IDbContextFactory<MovieTableEdit.Data.MovieTableEditContext> DbFactory

<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
    Data="@movie_facts" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selected_movie_facts>
    <Columns>
        <RadzenDataGridColumn Property="@nameof(MockMovieFact.MovieId)" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn Property="@nameof(MockMovieFact.Date)" Filterable="false"  Title="Date" Frozen="true" Width="160px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn Property="@nameof(MockMovieFact.Price)"  Filterable="false"  Title="Price" Frozen="false" Width="160px" TextAlign="TextAlign.Center" />
    </Columns>
</RadzenDataGrid>

@code {
    IEnumerable<MockMovieFact> movie_facts;
    IList<MockMovieFact> selected_movie_facts;

    private MovieTableEditContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
 
        movie_facts = context.MockMovieFact;

        selected_movie_facts = new List<MockMovieFact>(){ movie_facts.FirstOrDefault() };
    }
}