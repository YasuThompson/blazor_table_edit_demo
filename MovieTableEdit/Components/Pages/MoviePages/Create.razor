@page "/movies/create"
@using Microsoft.EntityFrameworkCore
@using MovieTableEdit.Models
@inject IDbContextFactory<MovieTableEdit.Data.MovieTableEditContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Movie</h2>
<hr />

<EditForm method="post" Model="MockMovieFact" OnValidSubmit="AddMovie" FormName="create" Enhance>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="title">Title:</label> 
        <InputNumber id="title" @bind-Value="MockMovieFact.MovieId" /> 
        <ValidationMessage For="() => MockMovieFact.MovieId" /> 
    </div>
    <div>
        <label for="releasedate">Date:</label> 
        <InputDate id="releasedate" @bind-Value="MockMovieFact.Date" /> 
        <ValidationMessage For="() => MockMovieFact.Date" /> 
    </div>
    <div>
        <label for="price">Price:</label> 
        <InputNumber id="price" @bind-Value="MockMovieFact.Price" /> 
        <ValidationMessage For="() => MockMovieFact.Price" /> 
    </div>
    <button type="submit">Create</button>
</EditForm>

<div>
    <a href="/movies">Back to List</a>
</div>

@code 
{
    [SupplyParameterFromForm]
    private MockMovieFact MockMovieFact { get; set; } = new();

    private async Task AddMovie()
    {
        using var context = DbFactory.CreateDbContext();
        context.MockMovieFact.Add(MockMovieFact);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/movies");
    }

}