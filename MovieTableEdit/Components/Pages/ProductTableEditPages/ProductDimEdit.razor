@page "/product-dim/{selected_product_types}"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using MovieTableEdit.Models
@using MovieTableEdit.Data
@inject IDbContextFactory<MovieTableEdit.Data.MovieTableEditContext> DbFactory
@implements IAsyncDisposable
@inject NavigationManager NavigationManager



<PageTitle>Product Information</PageTitle>

<p>
    Display:
    @foreach (var option in displayOptions)
    {
        <label style="margin-right: 10px;">
            <input type="checkbox" @bind="displayOptions[option.Key]" /> @option.Key
        </label>
    }
</p>


<QuickGrid Class="table" Items="queried_data">
    <PropertyColumn Title="Movie ID" Property = "movie => movie.ProductId" />

    <TemplateColumn Title="Title">
        <div>
            <label>
                <input type="string" @bind="@context.Title" />
            </label>
        </div>
    </TemplateColumn>

    <TemplateColumn Title="Poster">
            <div class="flex items-center" style="max-width: 200px; width: 100%;">
                <img class="w-8 h-6 mr-4" src="@GetPosterImgPath(context.ProductId)" style="width: 100%; height: auto;" />
            </div>
    </TemplateColumn>


    <TemplateColumn Title="Product Type">
        <div>
            <select type="int" @bind="@context.ProductTypeId">
                @foreach(var kvp in product_type_dict)
                {
                    <option value=@kvp.Key>@kvp.Value</option>
                }
            </select>
        </div>
    </TemplateColumn>

    <TemplateColumn Title="Genre">
        <div>
            <select type="int" @bind="@context.GenreId">
                @foreach(var kvp in genre_dict)
                {
                    <option value=@kvp.Key>@kvp.Value</option>
                }
            </select>
        </div>
    </TemplateColumn>

    @if(displayOptions["TitleDE"])
    {
        <TemplateColumn Title="German Title">
            <div>
                <label>
                    <input type="string" @bind="@context.TitleDE" />
                </label>
            </div>
        </TemplateColumn>
    }

    @if(displayOptions["TitleFR"])
    {
        <TemplateColumn Title="French Title">
            <div>
                <label>
                    <input type="string" @bind="@context.TitleFR" />
                </label>
            </div>
        </TemplateColumn>
    }

    @if(displayOptions["TitleES"])
    {
        <TemplateColumn Title="Spanish Title">
            <div>
                <label>
                    <input type="string" @bind="@context.TitleES" />
                </label>
            </div>
        </TemplateColumn>
    }

    @if(displayOptions["TitleIT"])
    {
        <TemplateColumn Title="Italian Title">
            <div>
                <label>
                    <input type="string" @bind="@context.TitleIT" />
                </label>
            </div>
        </TemplateColumn>
    }

    @if(displayOptions["TitleJP"])
    {    
        <TemplateColumn Title="Japanese Title">
            <div>
                <label>
                    <input type="string" @bind="@context.TitleJP" />
                </label>
            </div>
        </TemplateColumn>
    }


</QuickGrid>

<button @onclick="PublishChanges">Publish Changes</button>


@code {

    [Parameter]
    [SupplyParameterFromQuery(Name = "selected_producty_types")]
    public required string selected_product_types { get; set; }

    private Dictionary<string, int> product_type_id_dict = new Dictionary<string, int>
    {
        { "Movie", 1},
        { "TV", 2 },
        { "Anime", 3 },
        { "Comic", 4 },
    };

    private IQueryable<TempProductDim>? queried_data;

    private MovieTableEditContext db_context = default!;

    private Dictionary<int, string> product_type_dict = new Dictionary<int, string>();
    private Dictionary<int, string> genre_dict = new Dictionary<int, string>();

    Dictionary<string, bool> displayOptions = new Dictionary<string, bool>
    {
        { "TitleDE", true },
        { "TitleFR", true },
        { "TitleES", false },
        { "TitleIT", false },
        { "TitleJP", false },
    };

    protected override void OnInitialized()
    {
        db_context = DbFactory.CreateDbContext();


        string[] partsArray  = selected_product_types.Split('-');
        List<string> selected_product_type_list = new List<string>(partsArray);
        List<int> selected_product_type_id_list = selected_product_type_list.Select(type => product_type_id_dict[type]).ToList();

        queried_data = db_context.DbSetTempProductDim.Where(p => selected_product_type_id_list.Contains(p.ProductTypeId));

        product_type_dict = db_context.DbSetTempProductTypeDim.Select(p => new {p.ProductTypeId, p.ProductType}).AsEnumerable().ToDictionary(kvp => kvp.ProductTypeId, kvp => kvp.ProductType);
        genre_dict = db_context.DbSetTempGenreDim.Select(p => new {p.GenreId, p.Genre}).AsEnumerable().ToDictionary(kvp => kvp.GenreId, kvp => kvp.Genre);

    }

    private string GetPosterImgPath(int movie_id)
    {   
        string img_path = $"images/{movie_id}.jpg";
        return img_path;
    }


    private async Task PublishChanges()
    {
        // Uploading the rows with a new version to the database
        await db_context.SaveChangesAsync();

        // Going back to the table selection page
        NavigationManager.NavigateTo("/");;
    }

    public async ValueTask DisposeAsync() => await db_context.DisposeAsync();
}