@page "/"
@rendermode InteractiveServer

<select id="condition" @onclick="@FilterOption" @bind="@SelectedOpt" >
    <option value="genre">Movie Genre</option>
    <option value="title">Movie Title</option>
    <option value="price">Movie Price</option>
</select>
<br>


@if (if_show_genre_filter)
{
    @foreach (var genre in GenreList())
    {
        <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(genre, eventArgs.Value); }" />@genre<br />
    }
}

@if (if_show_column_filter)
{
    @foreach (var column in FactColumnList())
    {
        <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(column, eventArgs.Value); }" />@column
    }
}

<button type="submit"  disabled="@(if_ready_to_edit_table == false)">Start Editing Table</button>

@code {

    private bool if_show_genre_filter = false;
    private bool if_show_column_filter = false;
    private bool if_ready_to_edit_table = false;

    public string SelectedOpt { get; set; } = "";

    private void FilterOption()
    {
        if (SelectedOpt=="genre")
        {
            if_show_genre_filter = false;
            if_show_column_filter = false;
            if_ready_to_edit_table = true;

        }
        else if(SelectedOpt=="title")
        {
            if_show_genre_filter = true;
            if_show_column_filter = false;
            if_ready_to_edit_table = true;
        }
        else if(SelectedOpt=="price")
        {
            if_show_genre_filter = false;
            if_show_column_filter = true;
            if_ready_to_edit_table = true;
        }
    }


    public List<string> ClubMember { get; set; } = new List<string>();
    void CheckboxClicked(string clubID, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            if (!ClubMember.Contains(clubID))
            {
                ClubMember.Add(clubID);
            }
        }
        else
        {
            if (ClubMember.Contains(clubID))
            {
                ClubMember.Remove(clubID);
            }
        }
    }


    public List<String> GenreList()
    {
        // fetch from API or...
        List<String> c = new List<String>();
        c.Add("Sci-fi");
        c.Add("Action");
        c.Add("Esoteric");
        return c;
    }

    public List<String> FactColumnList()
    {
        // fetch from API or...
        List<String> c = new List<String>();
        c.Add("Date");
        c.Add("MovieId");
        c.Add("Price");
        return c;
    }




}